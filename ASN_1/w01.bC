#DRBC first program
#DRBC int arr1[10];

myFun(char a[]) {
   a = "cool";
}

int add() {
   return 4+7;
}

funcargs(int c[], x, y) {
   return;
}

funcadd(int x) {
   return x + x;
}
testfunc(int x, y, z; char z) {}
add(int x, y) { return x + y; }


fun2(int d[]){}

dont(char input) {}

int arr[10];
char d, e;
int x, y;


bool f, t;
main(){
   int x, y, z, x1, x2;
   char something;
   char ch: 'A';
   int const:15;
   int arr2[15];
   static int stat;
   
   while 10 do if 10 then out(1);
   for y = 0 to 2 do if 10 then out(1);
   while y<10 do {
      x++;
      x/=2;
      y++;
      x*=2;
      x+=15;
      x-=3;
      break;
   }
   8:<:9;
   9:>:8;
   for x = 0 to 10 by 2 do {
      funcadd(x);
   }
   //int z = 5 + 5;
   if y > 10 then {y = 10;}
   x = ?3;
   x = add();
   a[0] = x-y;
   a[1] = x+y;
   a[2] = x+y+y;
   a[3] = x / y;
   a[4] = y % x;
   a[4] = y * x;
   if x < 5 or y != 50 then {
      x = y;
      
   }
   if x == 10 then {;} else;
   fun2(*a);
   for y = 0 to *a do {
      if y == 1 then x--;
      if y <= 4 then x = 15;
      if y >= 3 then x = 9;
      if y > 5 then x = 5;
      if y < 8 then x = 7; 
   }
   if x < 0 then{ y = 3; } else {x = 15;}
   if x < 0 or y < 0 then{
      x = y;
   }
   if x ==0 and y == 0 then{
      x = 5;
   }
   funcadd(1, 2); 
   x1 = 15;
   while x1 == 15 do {;}
   x1 = -x1;
   while x1 < 0 do {
      x1++;
   }
   x2 = (5 + 5); 
   f = false;
   t = true;
   f = not t;
   if true then dont(something);
   else
      if(false) then
         dont('b');
   return;
} 
